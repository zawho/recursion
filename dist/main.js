(()=>{"use strict";console.log(`Non-recursive Fibonacci: [${function(n){const e=[];let t=0,o=1,r=t+o;e.push(t,o,r);for(let n=3;n<8;n++)t=o,o=r,r=t+o,e.push(r);return e}()}]`),console.log(`Recursive Fibonacci: [${function n(e){if(2===e)return[0,1];const t=n(e-1),o=t.length;return t.push(t[o-1]+t[o-2]),t}(8)}]`),console.log(`Merge sort: [${function n(e){if(e.length<=1)return e;const t=Math.floor(e.length/2);return function(n,e){const t=[];let o=0,r=0,c=0;for(;o<n.length&&r<e.length;)n[o]<e[r]?(t[c]=n[o],o++):(t[c]=e[r],r++),c++;for(;o<n.length;)t[c]=n[o],o++,c++;for(;r<e.length;)t[c]=e[r],r++,c++;return t}(n(e.slice(0,t)),n(e.slice(t)))}([3,2,1,13,8,5,0,1])}]`)})();